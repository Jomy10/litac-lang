{
    "description": "Single",
    "disabled": false,
    "includeTypeInfos": true,
    "program": `
        @include("assert.h");
        @foreign func assert(e:bool):void;

        %definitions%

        func main(len:i32, args:**char):i32 {
            %code%
        }
    `,
    "tests": [
        {
            "name": "struct default values",
            "definitions": `
                @include("<string.h>");
                @foreign func strcmp(a:*const char, b:*const char) : i32;

                struct Test {
                    x: [2]const char = "H"
                    y: *const char = "Hello"
                    z: [2]const char = [2]const char {'Z', '\0'}
                }
            `,
            "code": `
                var t = Test {}
                assert(strcmp(t.x, "H") == 0)
                assert(strcmp(t.y, "Hello") == 0)
                assert(strcmp(t.z, "Z") == 0)
            `,
        },
        {
            "name": "note default values",
            "definitions": `
                @note Test {
                    x: [2]const char = "H"
                    y: *const char = "Hello"
                    z: [2]const char = [2]const char {'Z', '\0'}
                }

                @Test(
                )
            `,
            "code": `

            `,
        },
    ]
}