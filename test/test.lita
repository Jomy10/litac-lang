/*var : void* = "hi"
var t = 1
const x i32 = 42

func test2<  (x: bool, ...) : i32 {
    return 4
}*/

//const z:i32;
//var x:bool = "hi"
//var y = null

const c = 2;
var x = 4;

@foreign
enum EnumTest {
  //  TEST_FIELD = c
}

struct StructTest {
    name: *const char = "sparks"
    age: i32

    struct EmbeddedStruct {
        name: *const char
        struct {
            age: f32
        }
       // age: i64
    }
}

func FuncTest() {
    var a = [2]i32{0,1}
    a[0] = 1 
    //a[1] = "hi"
    /*
    var a = [2]i32{0,1}
    var str = "hi"
    var y = str[0]
    var z = 0
    var x = z[1]*/
    /*
    var z = StructTest{
    //    .stage = true,
        .EmbeddedStruct = EmbeddedStruct {
            .name = "tony",
            .age = 36f,
        }
    }*/
    //var x = z ? y : z
/*
    var i = typeof(:StructTest)
    var x = typeof(:Struct)
    var z = typeof(i)
    var z2 = typeof(w)
    var i = offsetof(StructTest, name)
    var x = offsetof(Struct, name)
    var x = offsetof(StructTest, namex)
    var z = sizeof(:StructTest)
    var y = sizeof(:Struct)
    var w = sizeof(z)
    var w2 = sizeof(z2)
    */
    //var y = x
    //var w = null
    /*var w = true

    var tmp = 2
    const t = 10
    if(true) {
        tmp = "hi" + 2
        var ww:i32 = 2 + "hi"
       // t -= 2
    }*/
/*
    var array:[]i32 = [2]i32{1,2}
    var array2 = [4]i32{5,6,7,8}
    var array3 = [4]i32{15,16,17,18}

    array2 = array3*/
    /*var x = 10
    const y = 2
    var array4 = [2]i32 {
        [0] = 99,
        [true] = 4,
        ["hi"] = 2,
        [x]= 5,
        [y] = 111
    }*/
/*
    var z = 10
    var zz:f32 = z as (void)*/

/*
    var a = [2]i32{1,2}
    var x = 10
    var p = &x
    var pp = &10
    var pp2 = &a*/
    /*
l4:
    goto l2;
    var z:[2]f32 = (1+2)
l2:
    goto l3;
    goto l4*/
}