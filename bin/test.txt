Resolving Import: libc
Resolved Importing: ~libc
Resolving Import: mem
Resolving Import: libc
Resolved Importing: ~libc
Resolving Import: array
Resolving Import: mem
Resolved Importing: ~mem
Resolving Import: assert
Resolved Importing: ~assert
Resolving Import: libc
Resolved Importing: ~libc
Resolved Importing: ~array
Resolving Import: assert
Resolved Importing: ~assert
Resolved Importing: ~mem
Resolving Import: io
Resolving Import: mem
Resolved Importing: ~mem
Resolving Import: libc
Resolved Importing: ~libc
Resolved Importing: ~io
Resolving Import: lex
Resolving Import: string_view
Resolving Import: libc
Resolved Importing: ~libc
Resolving Import: mem
Resolved Importing: ~mem
Resolving Import: assert
Resolved Importing: ~assert
Resolved Importing: ~string_view
Resolving Import: string_buffer
Resolving Import: mem
Resolved Importing: ~mem
Resolving Import: io
Resolved Importing: ~io
Resolving Import: assert
Resolved Importing: ~assert
Resolving Import: string_view
Resolved Importing: ~string_view
Resolving Import: libc
Resolved Importing: ~libc
Resolved Importing: ~string_buffer
Resolving Import: libc
Resolved Importing: ~libc
Resolving Import: mem
Resolved Importing: ~mem
Resolving Import: types
Resolving Import: string_view
Resolved Importing: ~string_view
Resolving Import: string_buffer
Resolved Importing: ~string_buffer
Resolving Import: symbols
Resolving Import: array
Resolved Importing: ~array
Resolving Import: map
Resolving Import: mem
Resolved Importing: ~mem
Resolving Import: io
Resolved Importing: ~io
Resolving Import: assert
Resolved Importing: ~assert
Resolving Import: libc
Resolved Importing: ~libc
Resolving Import: string_view
Resolved Importing: ~string_view
Resolved Importing: ~map
Resolving Import: ast
Resolving Import: symbols
Resolved Importing: ~symbols
Resolving Import: types
Resolved Importing: ~types
Resolving Import: lex
Resolved Importing: ~lex
Resolving Import: array
Resolved Importing: ~array
Resolving Import: mem
Resolved Importing: ~mem
Resolving Import: common
Resolving Import: libc
Resolved Importing: ~libc
Resolved Importing: ~common
Resolving Import: module
Resolving Import: ast
Resolved Importing: ~ast
Resolving Import: ast_new
Resolving Import: ast
Resolved Importing: ~ast
Resolving Import: lex
Resolved Importing: ~lex
Resolving Import: symbols
Resolved Importing: ~symbols
Resolving Import: types
Resolved Importing: ~types
Resolving Import: mem
Resolved Importing: ~mem
Resolving Import: array
Resolved Importing: ~array
Resolving Import: common
Resolved Importing: ~common
Resolving Import: assert
Resolved Importing: ~assert
Resolving Import: module
Resolved Importing: ~module
Resolved Importing: ~ast_new
Resolving Import: lex
Resolved Importing: ~lex
Resolving Import: array
Resolved Importing: ~array
Resolving Import: map
Resolved Importing: ~map
Resolving Import: phase_result
Resolving Import: lex
Resolved Importing: ~lex
Resolving Import: common
Resolved Importing: ~common
Resolving Import: array
Resolved Importing: ~array
Resolving Import: string_buffer
Resolved Importing: ~string_buffer
Resolving Import: mem
Resolved Importing: ~mem
Resolving Import: libc
Resolved Importing: ~libc
Resolved Importing: ~phase_result
Resolving Import: string
Resolving Import: mem
Resolved Importing: ~mem
Resolving Import: io
Resolved Importing: ~io
Resolving Import: assert
Resolved Importing: ~assert
Resolving Import: string_view
Resolved Importing: ~string_view
Resolving Import: libc
Resolved Importing: ~libc
Resolved Importing: ~string
Resolving Import: string_view
Resolved Importing: ~string_view
Resolving Import: string_buffer
Resolved Importing: ~string_buffer
Resolving Import: system
Resolving Import: libc
Resolved Importing: ~libc
Resolved Importing: ~system
Resolving Import: lita
Resolving Import: mem
Resolved Importing: ~mem
Resolving Import: phase_result
Resolved Importing: ~phase_result
Resolving Import: array
Resolved Importing: ~array
Resolving Import: map
Resolved Importing: ~map
Resolving Import: module
Resolved Importing: ~module
Resolving Import: string_view
Resolved Importing: ~string_view
Resolving Import: system
Resolved Importing: ~system
Resolving Import: symbols
Resolved Importing: ~symbols
Resolving Import: preprocessor
Resolving Import: ast
Resolved Importing: ~ast
Resolving Import: ast_new
Resolved Importing: ~ast_new
Resolving Import: array
Resolved Importing: ~array
Resolving Import: mem
Resolved Importing: ~mem
Resolving Import: lita
Resolved Importing: ~lita
Resolving Import: libc
Resolved Importing: ~libc
Resolving Import: assert
Resolved Importing: ~assert
Resolved Importing: ~preprocessor
Resolved Importing: ~lita
Resolving Import: libc
Resolved Importing: ~libc
Resolving Import: mem
Resolved Importing: ~mem
Resolving Import: symbols
Resolved Importing: ~symbols
Resolving Import: types
Resolved Importing: ~types
Resolved Importing: ~module
Resolving Import: string_view
Resolved Importing: ~string_view
Resolving Import: libc
Resolved Importing: ~libc
Resolving Import: string
Resolved Importing: ~string
Resolved Importing: ~ast
Resolving Import: lex
Resolved Importing: ~lex
Resolving Import: types
Resolved Importing: ~types
Resolving Import: module
Resolved Importing: ~module
Resolving Import: lita
Resolved Importing: ~lita
Resolving Import: mem
Resolved Importing: ~mem
Resolving Import: phase_result
Resolved Importing: ~phase_result
Resolving Import: libc
Resolved Importing: ~libc
Resolved Importing: ~symbols
Resolving Import: ast
Resolved Importing: ~ast
Resolving Import: lex
Resolved Importing: ~lex
Resolving Import: array
Resolved Importing: ~array
Resolving Import: assert
Resolved Importing: ~assert
Resolving Import: mem
Resolved Importing: ~mem
Resolving Import: ast_new
Resolved Importing: ~ast_new
Resolving Import: libc
Resolved Importing: ~libc
Resolving Import: module
Resolved Importing: ~module
Resolved Importing: ~types
Resolved Importing: ~lex
Resolving Import: lita
Resolved Importing: ~lita
Resolving Import: types
Resolved Importing: ~types
Resolving Import: ast
Resolved Importing: ~ast
Resolving Import: ast_new
Resolved Importing: ~ast_new
Resolving Import: ast_print
Resolving Import: libc
Resolved Importing: ~libc
Resolving Import: ast
Resolved Importing: ~ast
Resolving Import: lex
Resolved Importing: ~lex
Resolving Import: array
Resolved Importing: ~array
Resolving Import: common
Resolved Importing: ~common
Resolved Importing: ~ast_print
Resolving Import: parser
Resolving Import: ast
Resolved Importing: ~ast
Resolving Import: ast_new
Resolved Importing: ~ast_new
Resolving Import: ast_copy
Resolving Import: ast
Resolved Importing: ~ast
Resolving Import: ast_new
Resolved Importing: ~ast_new
Resolving Import: lex
Resolved Importing: ~lex
Resolving Import: symbols
Resolved Importing: ~symbols
Resolving Import: types
Resolved Importing: ~types
Resolving Import: mem
Resolved Importing: ~mem
Resolving Import: array
Resolved Importing: ~array
Resolving Import: common
Resolved Importing: ~common
Resolving Import: assert
Resolved Importing: ~assert
Resolving Import: libc
Resolved Importing: ~libc
Resolved Importing: ~ast_copy
Resolving Import: lex
Resolved Importing: ~lex
Resolving Import: symbols
Resolved Importing: ~symbols
Resolving Import: types
Resolved Importing: ~types
Resolving Import: mem
Resolved Importing: ~mem
Resolving Import: array
Resolved Importing: ~array
Resolving Import: phase_result
Resolved Importing: ~phase_result
Resolving Import: error_codes
Resolving Import: phase_result
Resolved Importing: ~phase_result
Resolving Import: libc
Resolved Importing: ~libc
Resolved Importing: ~error_codes
Resolving Import: lita
Resolved Importing: ~lita
Resolving Import: common
Resolved Importing: ~common
Resolving Import: libc
Resolved Importing: ~libc
Resolving Import: assert
Resolved Importing: ~assert
Resolving Import: module
Resolved Importing: ~module
Resolving Import: string_buffer
Resolved Importing: ~string_buffer
Resolving Import: string
Resolved Importing: ~string
Resolving Import: ast_print
Resolved Importing: ~ast_print
Resolved Importing: ~parser
Resolving Import: phase_result
Resolved Importing: ~phase_result
Resolving Import: system
Resolved Importing: ~system
Resolving Import: array
Resolved Importing: ~array
Resolving Import: map
Resolved Importing: ~map
Resolving Import: error_codes
Resolved Importing: ~error_codes
Resolving Import: module
Resolved Importing: ~module
Resolving Import: string
Resolved Importing: ~string
Resolving Import: string_view
Resolved Importing: ~string_view
Resolving Import: string_buffer
Resolved Importing: ~string_buffer
Resolving Import: checker
Resolving Import: types
Resolved Importing: ~types
Resolving Import: types_new
Resolving Import: mem
Resolved Importing: ~mem
Resolving Import: types
Resolved Importing: ~types
Resolving Import: symbols
Resolved Importing: ~symbols
Resolving Import: array
Resolved Importing: ~array
Resolving Import: ast
Resolved Importing: ~ast
Resolved Importing: ~types_new
Resolving Import: symbols
Resolved Importing: ~symbols
Resolving Import: phase_result
Resolved Importing: ~phase_result
Resolving Import: module
Resolved Importing: ~module
Resolving Import: ast
Resolved Importing: ~ast
Resolving Import: ast_new
Resolved Importing: ~ast_new
Resolving Import: lex
Resolved Importing: ~lex
Resolving Import: lita
Resolved Importing: ~lita
Resolving Import: map
Resolved Importing: ~map
Resolving Import: string_buffer
Resolved Importing: ~string_buffer
Resolving Import: string_view
Resolved Importing: ~string_view
Resolving Import: array
Resolved Importing: ~array
Resolving Import: assert
Resolved Importing: ~assert
Resolving Import: string
Resolved Importing: ~string
Resolving Import: ast_print
Resolved Importing: ~ast_print
Resolving Import: libc
Resolved Importing: ~libc
Resolving Import: generics
Resolving Import: symbols
Resolved Importing: ~symbols
Resolving Import: ast
Resolved Importing: ~ast
Resolving Import: ast_copy
Resolved Importing: ~ast_copy
Resolving Import: types
Resolved Importing: ~types
Resolving Import: map
Resolved Importing: ~map
Resolving Import: array
Resolved Importing: ~array
Resolving Import: lita
Resolved Importing: ~lita
Resolving Import: string
Resolved Importing: ~string
Resolving Import: libc
Resolved Importing: ~libc
Resolving Import: assert
Resolved Importing: ~assert
Resolving Import: mem
Resolved Importing: ~mem
Resolving Import: module
Resolved Importing: ~module
Resolving Import: checker
Resolved Importing: ~checker
Resolved Importing: ~generics
Resolving Import: checker_decl
Resolving Import: types
Resolved Importing: ~types
Resolving Import: types_new
Resolved Importing: ~types_new
Resolving Import: symbols
Resolved Importing: ~symbols
Resolving Import: phase_result
Resolved Importing: ~phase_result
Resolving Import: module
Resolved Importing: ~module
Resolving Import: ast
Resolved Importing: ~ast
Resolving Import: lex
Resolved Importing: ~lex
Resolving Import: lita
Resolved Importing: ~lita
Resolving Import: map
Resolved Importing: ~map
Resolving Import: string_buffer
Resolved Importing: ~string_buffer
Resolving Import: array
Resolved Importing: ~array
Resolving Import: string_view
Resolved Importing: ~string_view
Resolving Import: assert
Resolved Importing: ~assert
Resolving Import: ast_print
Resolved Importing: ~ast_print
Resolving Import: libc
Resolved Importing: ~libc
Resolving Import: checker
Resolved Importing: ~checker
Resolving Import: checker_expr
Resolving Import: types
Resolved Importing: ~types
Resolving Import: types_new
Resolved Importing: ~types_new
Resolving Import: symbols
Resolved Importing: ~symbols
Resolving Import: phase_result
Resolved Importing: ~phase_result
Resolving Import: module
Resolved Importing: ~module
Resolving Import: ast
Resolved Importing: ~ast
Resolving Import: ast_new
Resolved Importing: ~ast_new
Resolving Import: lex
Resolved Importing: ~lex
Resolving Import: lita
Resolved Importing: ~lita
Resolving Import: map
Resolved Importing: ~map
Resolving Import: string_buffer
Resolved Importing: ~string_buffer
Resolving Import: string_view
Resolved Importing: ~string_view
Resolving Import: string
Resolved Importing: ~string
Resolving Import: array
Resolved Importing: ~array
Resolving Import: checker
Resolved Importing: ~checker
Resolving Import: assert
Resolved Importing: ~assert
Resolving Import: ast_print
Resolved Importing: ~ast_print
Resolving Import: libc
Resolved Importing: ~libc
Resolving Import: error_codes
Resolved Importing: ~error_codes
Resolved Importing: ~checker_expr
Resolved Importing: ~checker_decl
Resolving Import: checker_expr
Resolved Importing: ~checker_expr
Resolved Importing: ~checker
Resolving Import: cgen
Resolving Import: ast
Resolved Importing: ~ast
Resolving Import: string_buffer
Resolved Importing: ~string_buffer
Resolving Import: string_view
Resolved Importing: ~string_view
Resolving Import: string
Resolved Importing: ~string
Resolving Import: types
Resolved Importing: ~types
Resolving Import: module
Resolved Importing: ~module
Resolving Import: symbols
Resolved Importing: ~symbols
Resolving Import: lita
Resolved Importing: ~lita
Resolving Import: phase_result
Resolved Importing: ~phase_result
Resolving Import: lex
Resolved Importing: ~lex
Resolving Import: libc
Resolved Importing: ~libc
Resolving Import: array
Resolved Importing: ~array
Resolving Import: map
Resolved Importing: ~map
Resolving Import: common
Resolved Importing: ~common
Resolving Import: dependency_graph
Resolving Import: lita
Resolved Importing: ~lita
Resolving Import: map
Resolved Importing: ~map
Resolving Import: array
Resolved Importing: ~array
Resolving Import: symbols
Resolved Importing: ~symbols
Resolving Import: types
Resolved Importing: ~types
Resolving Import: assert
Resolved Importing: ~assert
Resolving Import: ast
Resolved Importing: ~ast
Resolving Import: mem
Resolved Importing: ~mem
Resolving Import: libc
Resolved Importing: ~libc
Resolved Importing: ~dependency_graph
Resolving Import: assert
Resolved Importing: ~assert
Resolving Import: system
Resolved Importing: ~system
Resolving Import: cgen_decl
Resolving Import: ast
Resolved Importing: ~ast
Resolving Import: string_buffer
Resolved Importing: ~string_buffer
Resolving Import: types
Resolved Importing: ~types
Resolving Import: module
Resolved Importing: ~module
Resolving Import: symbols
Resolved Importing: ~symbols
Resolving Import: lita
Resolved Importing: ~lita
Resolving Import: phase_result
Resolved Importing: ~phase_result
Resolving Import: lex
Resolved Importing: ~lex
Resolving Import: libc
Resolved Importing: ~libc
Resolving Import: array
Resolved Importing: ~array
Resolving Import: common
Resolved Importing: ~common
Resolving Import: assert
Resolved Importing: ~assert
Resolving Import: cgen
Resolved Importing: ~cgen
Resolved Importing: ~cgen_decl
Resolved Importing: ~cgen
Resolving Import: cmdline
Resolving Import: array
Resolved Importing: ~array
Resolving Import: io
Resolved Importing: ~io
Resolving Import: mem
Resolved Importing: ~mem
Resolving Import: string_buffer
Resolved Importing: ~string_buffer
Resolving Import: libc
Resolved Importing: ~libc
Resolved Importing: ~cmdline
Resolving Import: builtin
Resolved Importing: ~builtin
Resolving array index: C:\Users\antho\eclipse-workspace\litac/lib/mem.lita @ 556
Current scope: C:\Users\antho\eclipse-workspace\litac/lib/mem.lita
Creating generic type: Array
Created Generic: Array<*Allocation>
Resolving array index: ../src/types.lita @ 1295
Current scope: ../src/types.lita
Creating generic type: Array
Created Generic: Array<GenericParam>
Creating generic type: Array
Created Generic: Array<*TypeInfo>
Resolving array index: ../src/symbols.lita @ 46
Current scope: ../src/symbols.lita
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Created Generic: Array<*Symbol>
Creating generic type: Array
Creating generic type: Array
Creating generic type: Map
Created Generic: Map<*const char,*Symbol>
Creating generic type: HashFn
Created Generic: HashFn<*const char>
Creating generic type: Array
Created Generic: Array<*TypeSpec>
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Created Generic: Array<*NoteStmt>
Creating generic type: Array
Creating generic type: Array
Created Generic: Array<FieldStmt>
Creating generic type: Array
Created Generic: Array<*EnumFieldEntryDecl>
Creating generic type: Array
Creating generic type: Array
Created Generic: Array<*Stmt>
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Created Generic: Array<*ImportDecl>
Creating generic type: Array
Creating generic type: Array
Created Generic: Array<*Decl>
Creating generic type: Array
Created Generic: Array<Token>
Creating generic type: Array
Created Generic: Array<*ParameterDecl>
Creating generic type: Array
Created Generic: Array<*SwitchCaseStmt>
Creating generic type: Array
Created Generic: Array<*Expr>
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Created Generic: Array<*InitArgExpr>
Resolving array index: ../src/module.lita @ 23
Current scope: ../src/module.lita
Creating generic type: Map
Creating generic type: Array
Created Generic: Array<PhaseError>
Creating generic type: Map
Created Generic: Map<*const char,*Module>
Creating generic type: HashFn
Resolving array index: ../src/lita.lita @ 18
Current scope: ../src/lita.lita
Resolving array index: ../src/lita.lita @ 48
Current scope: ../src/lita.lita
Creating generic type: Array
Creating generic type: Array
Created Generic: Array<*Module>
Creating generic type: Array
Created Generic: Array<*FuncTypeInfo>
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Created Generic: Array<Array<GenericParam>>
Creating generic type: Array
Resolving array index: ../src/checker.lita @ 55
Current scope: ../src/checker.lita
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Creating generic type: Map
Created Generic: Map<*Symbol,Dependency>
Creating generic type: HashFn
Created Generic: HashFn<*Symbol>
Creating generic type: Array
Created Generic: Array<*Dependency>
Creating generic type: Array
Created Generic: Array<Option>
Creating generic type: Array
Created Generic: Array<*const char>
Resolving array index: C:\Users\antho\eclipse-workspace\litac/lib/cmdline.lita @ 35
Current scope: C:\Users\antho\eclipse-workspace\litac/lib/cmdline.lita
Resolving array index: ../src/main.lita @ 167
Current scope: ../src/main.lita
Creating generic type: Array
Created Generic: Array<T>
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Creating generic type: Array
Resolving array index: ../src/types.lita @ 1115
Current scope: ../src/types.lita
Resolving array index: ../src/types.lita @ 1410
Current scope: ../src/types.lita
Resolving array index: ../src/symbols.lita @ 123
Current scope: ../src/symbols.lita
Resolving array index: ../src/symbols.lita @ 135
Current scope: ../src/symbols.lita
Creating generic type: Map
Created Generic: Map<*const char,V>
Creating generic type: Map
Created Generic: Map<StringView,V>
Creating generic type: Map
Created Generic: Map<K,V>
Creating generic type: HashFn
Created Generic: HashFn<K>
Creating generic type: EqualFn
Created Generic: EqualFn<K>
Creating generic type: Map
Creating generic type: Map
Creating generic type: Map
Creating generic type: Map
Creating generic type: Map
Creating generic type: Map
Creating generic type: Map
Creating generic type: Map
Creating generic type: Map
Creating generic type: Map
Creating generic type: MapIterator
Created Generic: MapIterator<K,V>
Creating generic type: MapIterator
Creating generic type: MapIterator
Creating generic type: MapEntry
Created Generic: MapEntry<K,V>
Creating generic type: Array
Creating generic type: Array
Resolving arra